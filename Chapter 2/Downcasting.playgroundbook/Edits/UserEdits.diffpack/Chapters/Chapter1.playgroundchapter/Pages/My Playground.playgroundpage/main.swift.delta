<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import UIKit

class Beverage {
    var category: String
    init(category: String){
        self.category = category
    }
}

class HotDrink: Beverage {
    var pairing: String
    
    init(category: String, pairing: String){
        self.pairing = pairing
        super.init(category: category)
    }
}

class ColdDrink: Beverage {
    var vessel: String
    init(category: String, vessel: String){
        self.vessel = vessel
        super.init(category:category)
    }
}

var drinkChoices = [
    HotDrink(category: "coffee", pairing:"biscotti"),
    HotDrink(category: "tea", pairing:"crumpets"),
    ColdDrink(category: "lemonade", vessel:"glass"),
    ColdDrink(category: "beer", vessel:"frosty mug")
]

// Generic drink offer
for beverage in drinkChoices {
    print("Can I get you a \(beverage.category)")
}

// Type cast operators as? and as!
for beverage in drinkChoices {
    if let coldDrink = beverage as? ColdDrink {
        print("Can I offer you a \(coldDrink.vessel) of \(coldDrink.category)?")
    }else if let hotDrink = beverage as? HotDrink{
        print("Can I offer you a \(hotDrink.category) of \(hotDrink.pairing)?")
    }
}

//downcasting with as?
var coffeeArray: [Beverage] = [
    HotDrink(category: "coffee", pairing: "biscotti"),
    HotDrink(category: "coffee", pairing: "scones"),
    HotDrink(category: "coffee", pairing: "biscotti"),
]
for beverage in coffeeArray {
    let hotDrink = beverage as! HotDrink
    print("Can I offer you a \(hotDrink.category) of \(hotDrink.pairing)?")
}
</string>
			<key>ModifiedRange</key>
			<string>{0, 1523}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
